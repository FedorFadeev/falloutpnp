@use '../variables' as *;

@import './rollable.scss';

// Flexbox row for positioning images next to inputs.
.flex {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
}

// Vertically split a sheet into <section>s.
.sheet-column {
  & section {
    padding: 4px;
  }
  &:first-child {
    border-right: $border-default;
  }
  & section:not(:last-child) {
    border-bottom: $border-default;
  }
}

// Small text in the bottom right of a data-field, an input or a select.
.undertext {
  position: absolute;
  bottom: -8px;
  right: -1px;
  font-size: 10px;
  font-weight: bold;
  text-align: right;
  line-height: 1rem;
  white-space: nowrap;
  color: #000000;
  &-radio {
    bottom: -8px;
    right: -2px;
  }
}

// Class for a <div> that contains an <img> that displays a vault boy style icon.
.vault-boy {
  max-height: 28px;
  max-width: 28px;
  & img {
    border: none;
    max-width: 34px;
    position: relative;
    left: -3px;
    top: -3px;
  }
}

// TODO: Refactor usage of this, then rename.
.data-cell {
  position: relative;
  display: flex;
}

// Static or derived data that is not user-editable, styled similar to an input.
.data-field {
  position: relative;
  width: 100%;
  min-width: 48px;
  height: var(--form-field-height);
  background: $input-overlay;
  padding: 0 4px;
  color: var(--color-text-dark-primary);
  line-height: var(--form-field-height);
  border-radius: 4px;
  & .undertext {
    right: -3px;
  }
}

.input-field {
  position: relative;
  min-width: 80px;
}

.number-input-field {
  position: relative;
  width: 40px;
  min-width: 32px;
}
